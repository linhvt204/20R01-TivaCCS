/*******************************************************************************
 *  Name of files:  InitSysTick.c
 *  Description:
 *
 * Linh Vu - vu.t.linh204.work@gmail.com
 * Freelance
 * October 2019
 * Built with CCS v.9.2

 ********************************************************************************/

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include <user_init/InitSysTick.h>
#include "driverlib/sysctl.h"
#include "driverlib/timer.h"
#include "driverlib/systick.h"

static volatile uint32_t counter;

static void SysTick_Handler(void) {
    counter++;
}

void Init_SysTick(void)
{
    SysTickPeriodSet(SysCtlClockGet() / 1000000UL); // 1000 for milliseconds & 1000000 for microseconds
    SysTickIntRegister(SysTick_Handler);
    SysTickIntEnable();
    SysTickEnable();
}

void SysTick_delay_us(uint32_t ui32us)
{
    uint32_t start = micros();
    while ((int32_t)(micros() - start) < us) {
        // Do nothing
    };
}

void SysTick_delay_ms(int ui32ms)
{
    delayMicroseconds(ms * 1000UL);
}

void SysTick_delay_s(int ui32s)
{

}

uint32_t millis(void) {
    return counter / 1000UL;
}

uint32_t micros(void)
{
    return counter;
}
